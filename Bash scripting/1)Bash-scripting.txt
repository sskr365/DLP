2)Working with Aliases:
3)Startup files:
4)Alternatice Shells
5)Exit codes



===================================
======================================

I/O redirections:
---------------------
'>' -> redirects output to some other file
  Ex: ls > myfiles.txt
'>>' -> append opt put to given file above one overrides to the given file
'<' -> passes given text as input
	Ex: sort < myfiles.txt 
'2>' -> redirects errors to some other file or location
  ex: grep root /etc/* 2>/dev/null > grepout.txt
    when we run "grep root /etc/*" it will show permission denied to some files, those files will be redirected to /dev/null and clear out will be redirected to grepout.txt

ls -l | grep 1 -> it will list all files which has '1' character ( even 121, 0001 , 23516 filea also)

Variables:
----------
env --> it will list all environment variables
variable usage --> key=value
varaibles will be available in current shell, to use variables in sub shells we will use export command

To print   varaibles -> echo $<KEY>
  Ex - echo $SHELL

if we are running any command in linux it will go serach in "echo $PATH"

for example:
----------
myvar=red
-> toprint it "echo $myvar"  -> prints red,
   suppose if we give "echo $myvar1" , it wont prnt anything because it is not defined,
                      "echo ${myvar}1" -> prints red1
variables will work in same shell, if we enter into other shell it won't work , ex: bash(it enters into other shell, type exit to come out of it)

to use varaibles in sub shell export the variable using export command
	export key=value
	ex: myvar=red

Simple shell script for sum:
---------------------------
a=5
b=10
sum =$((a+b))
echo $sum

2) Working with Aliases:
======================
to check aliases in system use command "alias"
To assign alais:
 Ex: alias my_cmd="ls -lrt"
To remove aliaS:
 Ex: unalias my_cmd

3)Startup files:
===============
In os environmet ther are some startup files when ever os boots to set env variables and aliases. There are user startup files, subshell satrtip files, loginshell startup 
General startupfiles are
	~/.bashrc
	~/.bash_profile
	~/.bash_login
	~/.profile
For global setting for bash startup files are
	/etc/bas.bashrc
	/etc/bashrc

.bash_profile is read and executed when Bash is invoked as an interactive login shell, while .bashrc is executed for an interactive non-login shell.

Use .bash_profile to run commands that should run only once, such as customizing the $PATH environment variable .
Put the commands that should run every time you launch a new shell in the .bashrc file. This include your aliases and functions , custom prompts, history customizations , and so on.

4)Alternative shells:
===================
sh -> bourne shell , this is original shell
bash -> bourne again shell, runs in any environment mostly
cshell -> /bin/csh  generally developed by c
kshell -> korne shell, combination of bourne & C shell
zsh --> in macos
dash --> in debian environmnets

To check which shell is in use in linux --> echo $SHELL


5)Exit code:
===========
exit codes runs after execution of every command
	echo $? --> shows last exit code
		0 -> success
		1 -> generic error
		2 -> missuse of shell

To change shell, command is --> chsh -s /bin/bash

==================14th  day complted=============================

